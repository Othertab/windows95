dent programming languages such asJava. Here are the primary goals of the plug-in API:<ul><li>Provide seamless new data-type support for Netscape users.<li>Provide the maximum degree of flexibility for plug-in writers.<li>Be functionally equivalent across all platforms.</ul>The plug-in API supports four broad areas of functionality. Plug-inscan:<ul><li>Draw into, and receive events from, a native window element that is a part of the Netscape window hierarchy.<li>Obtain data from the network via URLs.<li>Generate data for consumption by other plug-ins or Netscape.</ul>Plug-ins can have one of three modes of operation: embedded,full-screen, or hidden. An embedded plug-in is a part of a largerHTML document, visible as a rectangular frame within a page (embeddedplug-ins are specified in HTML with the EMBED tag). A full-screenplug-in is a self-contained viewer, completely filling the contentarea of a Netscape window. A hidden plug-in runs in the background.<P>The Netscape user interface remains relatively unchanged even whenplug-ins are in use. Frames without plug-in data function likeordinary frames. Basic operations such as navigation, history, andopening files are not changed by plug-ins.<P>A plug-in can retrieve a URL with the same network functionality asNetscape. The data from such a URL is provided as a stream as thedata arrives from the network. Plug-ins can themselves generate datathat Netscape or other plug-ins can display. Plug-ins can bothproduce and consume data.<P>Plug-ins are associated with a MIME data type that Netscape does notnatively support. When Netscape encounters an unknown data type froma server, Netscape looks for a plug-in that is associated with thatMIME type and loads the plug-in.<HR ALIGN="right"WIDTH=85%><P><A NAME="C14"><b>What is a cache and how does it work?</b></A><P>A cache temporarily stores the information on a page in your computer.The first time you ask for a page, Netscape retrieves the page fromthe network. No pages are permanently stored in a cache. If yourequest a page you have seen before, Netscape checks to see if thepage is available in a cache. For example, if you use the Back buttonto display a page, a cache can display the page more quickly than thenetwork can retransmit it.<P>Sometimes you might not want a page to be retrieved from a cache. Thepage you displayed initially may be different than the page currentlyoffered by the network. If a modification to a particular URL hasoccurred, you may want the updated page rather than the copy (nowstale) stored in a cache. Remember, you have no control over when aserver updates its pages.<P>When you click on a link, choose a bookmark, enter a URL, or press the<b>Reload</b> button, Netscape checks with the server to see if anupdate has occurred before bringing a page from a cache. If anychange to the page has occurred, a fresh version is transmitted overthe network; otherwise, a copy is quickly retrieved from a cache.<P>If you press the <b>Reload</b> button while holding down the Shift key(Option key on Macintosh), Netscape retrieves a fresh version fromthe network regardless of whether the page has been updated. Thecache is not used. This type of reload is useful if you suspect thecached copy of a page has been corrupted.<P>When you press the <b>Back</b> button or choose a history item,Netscape does not check the network. Since you are explicitlyrequesting a previously viewed page, Netscape tries first to retrievethe cached copy (if still present in the cache) even if the serveroffers a more recent version.<HR ALIGN="right"WIDTH=85%><P><A NAME="C15"><b>What is the difference between memory cache and disk cache?</b></A><P>Netscape supports memory and disk cache to improve performance andreduce network traffic. When you bring a page from the network,information is stored in both caches. Netscape retrieves a page fromthe memory cache more quickly than from the disk cache, thoughretrieving from the disk cache is still faster than fetching from thenetwor